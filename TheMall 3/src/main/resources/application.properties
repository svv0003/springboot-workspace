# 서버 포트
# 어플리케이션 실행될 때 사용하는 포트 번호를 지정한다.
# 포트는 네트워크에서 데이터를 주고받는 창구 같은 개념.
# Spring Boot의 기본 포트는 8080.
# 웹 브라우저에서 http://localhost:8080으로 접속하면 이 어플리케이션에 접근 가능하다.
server.port=8080


# DB 연결 (DataSource)
# 어플리케이션이 MySQL DB에 연결하는 방법을 정의한다.
spring.datasource.url=jdbc:mysql://localhost:3306/tje
# DB 위치와 명칭      로컬 컴퓨터의 MySQL 서버 (포트 3306)에 있는 tje라는 DB에 연결.
spring.datasource.username=user1
# DB 사용자 명칭
spring.datasource.password=tjee1234
# DB 사용자 비밀번호
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# MySQL DB와 통신하기 위한 드라이버 클래스
#                                   MySQL용 JDBC 드라이버


# JPA/Hibernate
# Java 객체와 DB 테이블을 연결해주는 기술과 JPA를 구현한 라이브러리.
spring.jpa.hibernate.ddl-auto=update
# DB 테이블을 자동으로 관리하는 설정.
#                             어플리케이션 실행 시 Java 엔터티 클래스 (model)를 기반으로 테이블을 자동으로 업데이트한다.
#                             새 필드가 추가되면 테이블에 반영하지만, 기존 데이터는 삭제하지 않는다.
spring.jpa.show-sql=true
# 실행되는 SQL 쿼리를 콘솔에 출력하도록 설정. (디버깅 시 유용하다.)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Hibernate가 MySQL DB에 맞게 SQL 생성하도록 설정. (DB마다 SQL 문법 다르다.)


# Thymeleaf
# HTML 템플릿 엔진으로 동적 웹 페이지 만들 때 사용한다.
spring.thymeleaf.prefix=classpath:/templates/
# HTML 파일이 저장된 폴더 지정한다.
spring.thymeleaf.suffix=.html
# 템플릿 파일의 확장자를 지정한다.
spring.thymeleaf.mode=HTML
# 템플릿을 HTML 형식으로 처리하도록 설정.
spring.thymeleaf.encoding=UTF-8
# 템플릿 파일의 문자 인코딩을 설정.
#                         한글을 표시하기 위해 UTF-8 사용한다.
spring.thymeleaf.cache=false
# 템플릿 캐싱 비활성화 설정.


# 정적 리소스
spring.web.resources.static-locations=classpath:/static/
# 정적 리소스 파일이 저장된 폴더 지정한다.
# 이 폴더에 저장된 파일은 URL로 바로 접근 가능하다. (http://localhost:8080/style.css)


# MyBatis
# DB 쿼리를 쉽게 작성하도록 도와주는 프레임워크.
# SQL 쿼리를 XML 파일에 작성하고, Java 코드와 연결한다.
mybatis.mapper-locations=classpath:mappers/**/*.xml
#                        src/main/resources/mappers/**/*.xml
#                        classpath =  src/main/resources
# MyBatis SQL 쿼리가 작성된 XML 파일 (Mapper 파일) 위치를 지정한다.
mybatis.type-aliases-package=com.thejoeun.theMall.model
# MyBaits가 Java 모델 클래스를 참조할 때 사용할 패키지를 지정한다.
mybatis.configuration.map-underscore-to-camel-case=true
# DB 컬럼명을 Java 객체의 필드명으로 자동 변환한다.